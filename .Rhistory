par(cex.axis = 1)
plot(mu,type = "l",col = "black",lwd = 3,xlab = "position",ylab = "",
ylim = c(-0.05,1),xaxp = c(0,1024,4),yaxp = c(0,1,4))
lines(mu.ti,col = "dodgerblue",lwd = 3)
lines(mu.smash,col = "orangered",lwd = 3)
t         <- (1:1024)/1024
mu        <- blip.fn(t,"mean")
sigma.ini <- sqrt(cons.fn(t,"var"))
sd.fn     <- sigma.ini/mean(sigma.ini) * sd(mu)/1
set.seed(191029)
x.sim  <- rnorm(n,mu,sd.fn)
mu.smash <- smash(x.sim,family = "DaubLeAsymm",filter.number = 8)
mu.ti    <- ti.thresh(x.sim,method = "rmad",family = "DaubLeAsymm",
filter.number = 8)
par(cex.axis = 1)
plot(mu,type = "l",col = "black",lwd = 3,xlab = "position",ylab = "",
ylim = c(-0.05,1),xaxp = c(0,1024,4),yaxp = c(0,1,4))
lines(mu.ti,col = "dodgerblue",lwd = 3)
lines(mu.smash,col = "orangered",lwd = 3)
t         <- (1:1024)/1024
mu        <- blip.fn(t,"mean")
sigma.ini <- sqrt(cons.fn(t,"var"))
sd.fn     <- sigma.ini/mean(sigma.ini) * sd(mu)/1
set.seed(191030)
x.sim  <- rnorm(n,mu,sd.fn)
mu.smash <- smash(x.sim,family = "DaubLeAsymm",filter.number = 8)
mu.ti    <- ti.thresh(x.sim,method = "rmad",family = "DaubLeAsymm",
filter.number = 8)
par(cex.axis = 1)
plot(mu,type = "l",col = "black",lwd = 3,xlab = "position",ylab = "",
ylim = c(-0.05,1),xaxp = c(0,1024,4),yaxp = c(0,1,4))
lines(mu.ti,col = "dodgerblue",lwd = 3)
lines(mu.smash,col = "orangered",lwd = 3)
t         <- (1:1024)/1024
mu        <- blip.fn(t,"mean")
sigma.ini <- sqrt(cons.fn(t,"var"))
sd.fn     <- sigma.ini/mean(sigma.ini) * sd(mu)/1
set.seed(191026)
x.sim  <- rnorm(n,mu,sd.fn)
mu.smash <- smash(x.sim,family = "DaubLeAsymm",filter.number = 8)
mu.ti    <- ti.thresh(x.sim,method = "rmad",family = "DaubLeAsymm",
filter.number = 8)
par(cex.axis = 1)
plot(mu,type = "l",col = "black",lwd = 3,xlab = "position",ylab = "",
ylim = c(-0.05,1),xaxp = c(0,1024,4),yaxp = c(0,1,4))
lines(mu.ti,col = "dodgerblue",lwd = 3)
lines(mu.smash,col = "orangered",lwd = 3)
t         <- (1:1024)/1024
mu        <- blip.fn(t,"mean")
sigma.ini <- sqrt(cons.fn(t,"var"))
sd.fn     <- sigma.ini/mean(sigma.ini) * sd(mu)/1
set.seed(191025)
x.sim  <- rnorm(n,mu,sd.fn)
mu.smash <- smash(x.sim,family = "DaubLeAsymm",filter.number = 8)
mu.ti    <- ti.thresh(x.sim,method = "rmad",family = "DaubLeAsymm",
filter.number = 8)
par(cex.axis = 1)
plot(mu,type = "l",col = "black",lwd = 3,xlab = "position",ylab = "",
ylim = c(-0.05,1),xaxp = c(0,1024,4),yaxp = c(0,1,4))
lines(mu.ti,col = "dodgerblue",lwd = 3)
lines(mu.smash,col = "orangered",lwd = 3)
t         <- (1:1024)/1024
mu        <- blip.fn(t,"mean")
sigma.ini <- sqrt(cons.fn(t,"var"))
sd.fn     <- sigma.ini/mean(sigma.ini) * sd(mu)/1
set.seed(191024)
x.sim  <- rnorm(n,mu,sd.fn)
mu.smash <- smash(x.sim,family = "DaubLeAsymm",filter.number = 8)
mu.ti    <- ti.thresh(x.sim,method = "rmad",family = "DaubLeAsymm",
filter.number = 8)
par(cex.axis = 1)
plot(mu,type = "l",col = "black",lwd = 3,xlab = "position",ylab = "",
ylim = c(-0.05,1),xaxp = c(0,1024,4),yaxp = c(0,1,4))
lines(mu.ti,col = "dodgerblue",lwd = 3)
lines(mu.smash,col = "orangered",lwd = 3)
t         <- (1:1024)/1024
mu        <- blip.fn(t,"mean")
sigma.ini <- sqrt(cons.fn(t,"var"))
sd.fn     <- sigma.ini/mean(sigma.ini) * sd(mu)/1
set.seed(191023)
x.sim  <- rnorm(n,mu,sd.fn)
mu.smash <- smash(x.sim,family = "DaubLeAsymm",filter.number = 8)
mu.ti    <- ti.thresh(x.sim,method = "rmad",family = "DaubLeAsymm",
filter.number = 8)
par(cex.axis = 1)
plot(mu,type = "l",col = "black",lwd = 3,xlab = "position",ylab = "",
ylim = c(-0.05,1),xaxp = c(0,1024,4),yaxp = c(0,1,4))
lines(mu.ti,col = "dodgerblue",lwd = 3)
lines(mu.smash,col = "orangered",lwd = 3)
t         <- (1:1024)/1024
mu        <- blip.fn(t,"mean")
sigma.ini <- sqrt(cons.fn(t,"var"))
sd.fn     <- sigma.ini/mean(sigma.ini) * sd(mu)/1
set.seed(102719)
x.sim  <- rnorm(n,mu,sd.fn)
mu.smash <- smash(x.sim,family = "DaubLeAsymm",filter.number = 8)
mu.ti    <- ti.thresh(x.sim,method = "rmad",family = "DaubLeAsymm",
filter.number = 8)
par(cex.axis = 1)
plot(mu,type = "l",col = "black",lwd = 3,xlab = "position",ylab = "",
ylim = c(-0.05,1),xaxp = c(0,1024,4),yaxp = c(0,1,4))
lines(mu.ti,col = "dodgerblue",lwd = 3)
lines(mu.smash,col = "orangered",lwd = 3)
t         <- (1:1024)/1024
mu        <- blip.fn(t,"mean")
sigma.ini <- sqrt(cons.fn(t,"var"))
sd.fn     <- sigma.ini/mean(sigma.ini) * sd(mu)/1
set.seed(102819)
x.sim  <- rnorm(n,mu,sd.fn)
mu.smash <- smash(x.sim,family = "DaubLeAsymm",filter.number = 8)
mu.ti    <- ti.thresh(x.sim,method = "rmad",family = "DaubLeAsymm",
filter.number = 8)
par(cex.axis = 1)
plot(mu,type = "l",col = "black",lwd = 3,xlab = "position",ylab = "",
ylim = c(-0.05,1),xaxp = c(0,1024,4),yaxp = c(0,1,4))
lines(mu.ti,col = "dodgerblue",lwd = 3)
lines(mu.smash,col = "orangered",lwd = 3)
t         <- (1:1024)/1024
mu        <- blip.fn(t,"mean")
sigma.ini <- sqrt(cons.fn(t,"var"))
sd.fn     <- sigma.ini/mean(sigma.ini) * sd(mu)/1
set.seed(102919)
x.sim  <- rnorm(n,mu,sd.fn)
mu.smash <- smash(x.sim,family = "DaubLeAsymm",filter.number = 8)
mu.ti    <- ti.thresh(x.sim,method = "rmad",family = "DaubLeAsymm",
filter.number = 8)
par(cex.axis = 1)
plot(mu,type = "l",col = "black",lwd = 3,xlab = "position",ylab = "",
ylim = c(-0.05,1),xaxp = c(0,1024,4),yaxp = c(0,1,4))
lines(mu.ti,col = "dodgerblue",lwd = 3)
lines(mu.smash,col = "orangered",lwd = 3)
t         <- (1:1024)/1024
mu        <- blip.fn(t,"mean")
sigma.ini <- sqrt(cons.fn(t,"var"))
sd.fn     <- sigma.ini/mean(sigma.ini) * sd(mu)/1
set.seed(102619)
x.sim  <- rnorm(n,mu,sd.fn)
mu.smash <- smash(x.sim,family = "DaubLeAsymm",filter.number = 8)
mu.ti    <- ti.thresh(x.sim,method = "rmad",family = "DaubLeAsymm",
filter.number = 8)
par(cex.axis = 1)
plot(mu,type = "l",col = "black",lwd = 3,xlab = "position",ylab = "",
ylim = c(-0.05,1),xaxp = c(0,1024,4),yaxp = c(0,1,4))
lines(mu.ti,col = "dodgerblue",lwd = 3)
lines(mu.smash,col = "orangered",lwd = 3)
t         <- (1:1024)/1024
mu        <- blip.fn(t,"mean")
sigma.ini <- sqrt(cons.fn(t,"var"))
sd.fn     <- sigma.ini/mean(sigma.ini) * sd(mu)/1
set.seed(102519)
x.sim  <- rnorm(n,mu,sd.fn)
mu.smash <- smash(x.sim,family = "DaubLeAsymm",filter.number = 8)
mu.ti    <- ti.thresh(x.sim,method = "rmad",family = "DaubLeAsymm",
filter.number = 8)
par(cex.axis = 1)
plot(mu,type = "l",col = "black",lwd = 3,xlab = "position",ylab = "",
ylim = c(-0.05,1),xaxp = c(0,1024,4),yaxp = c(0,1,4))
lines(mu.ti,col = "dodgerblue",lwd = 3)
lines(mu.smash,col = "orangered",lwd = 3)
t         <- (1:1024)/1024
mu        <- blip.fn(t,"mean")
sigma.ini <- sqrt(cons.fn(t,"var"))
sd.fn     <- sigma.ini/mean(sigma.ini) * sd(mu)/1
set.seed(102419)
x.sim  <- rnorm(n,mu,sd.fn)
mu.smash <- smash(x.sim,family = "DaubLeAsymm",filter.number = 8)
mu.ti    <- ti.thresh(x.sim,method = "rmad",family = "DaubLeAsymm",
filter.number = 8)
par(cex.axis = 1)
plot(mu,type = "l",col = "black",lwd = 3,xlab = "position",ylab = "",
ylim = c(-0.05,1),xaxp = c(0,1024,4),yaxp = c(0,1,4))
lines(mu.ti,col = "dodgerblue",lwd = 3)
lines(mu.smash,col = "orangered",lwd = 3)
t         <- (1:1024)/1024
mu        <- blip.fn(t,"mean")
sigma.ini <- sqrt(cons.fn(t,"var"))
sd.fn     <- sigma.ini/mean(sigma.ini) * sd(mu)/1
set.seed(102719)
x.sim  <- rnorm(n,mu,sd.fn)
mu.smash <- smash(x.sim,family = "DaubLeAsymm",filter.number = 8)
mu.ti    <- ti.thresh(x.sim,method = "rmad",family = "DaubLeAsymm",
filter.number = 8)
par(cex.axis = 1)
plot(mu,type = "l",col = "black",lwd = 3,xlab = "position",ylab = "",
ylim = c(-0.05,1),xaxp = c(0,1024,4),yaxp = c(0,1,4))
lines(mu.ti,col = "dodgerblue",lwd = 3)
lines(mu.smash,col = "orangered",lwd = 3)
sum((mu - mu.smash)^2)
sum((mu - mu.ti)^2)
sum((mu[1:512] - mu.smash[1:512])^2)
sum((mu[1:512] - mu.ti[1:512])^2)
mu        <- blip.fn(t,"mean")
sigma.ini <- sqrt(cons.fn(t,"var"))
sd.fn     <- sigma.ini/mean(sigma.ini) * sd(mu)/1
plot(mu,type = "l", ylim = c(-0.05,1),xlab = "position",ylab = "",
lwd = 1.75,xaxp = c(0,1024,4),yaxp = c(0,1.25,4))
lines(mu + 2*sd.fn,col = "darkorange",lty = 5,lwd = 1.75)
lines(mu - 2*sd.fn,col = "darkorange",lty = 5,lwd = 1.75)
mu        <- blip.fn(t,"mean")
sigma.ini <- sqrt(cons.fn(t,"var"))
sd.fn     <- sigma.ini/mean(sigma.ini) * sd(mu)/1
plot(mu,type = "l", ylim = c(-0.25,1.25),xlab = "position",ylab = "",
lwd = 1.75,xaxp = c(0,1024,4),yaxp = c(0,1,4))
lines(mu + 2*sd.fn,col = "darkorange",lty = 5,lwd = 1.75)
lines(mu - 2*sd.fn,col = "darkorange",lty = 5,lwd = 1.75)
t         <- (1:1024)/1024
mu        <- blip.fn(t,"mean")
sigma.ini <- sqrt(cons.fn(t,"var"))
sd.fn     <- sigma.ini/mean(sigma.ini) * sd(mu)/1
set.seed(102719)
x.sim  <- rnorm(n,mu,sd.fn)
mu.smash <- smash(x.sim,family = "DaubLeAsymm",filter.number = 8)
mu.ti    <- ti.thresh(x.sim,method = "rmad",family = "DaubLeAsymm",
filter.number = 8)
par(cex.axis = 1)
plot(mu,type = "l",col = "black",lwd = 3,xlab = "position",ylab = "",
ylim = c(-0.05,1),xaxp = c(0,1024,4),yaxp = c(0,1,4))
lines(mu.ti,col = "dodgerblue",lwd = 3)
lines(mu.smash,col = "orangered",lwd = 3)
hetero.data.smash.2 <-
res[res$.id == "blip.1.v1" & res$method == "smash.s8",]
hetero.data.smash.homo.2 <-
res[res$.id == "blip.1.v1" & res$method == "smash.homo.s8",]
hetero.data.tithresh.homo.2 <-
res[res$.id == "blip.1.v1" & res$method == "tithresh.homo.s8",]
hetero.data.tithresh.rmad.2 <-
res[res$.id == "blip.1.v1" & res$method == "tithresh.rmad.s8",]
hetero.data.tithresh.smash.2 <-
res[res$.id == "blip.1.v1" & res$method == "tithresh.smash.s8",]
hetero.data.tithresh.true.2 <-
res[res$.id == "blip.1.v1" & res$method == "tithresh.true.s8",]
hetero.data.ebayes.2 <-
res[res$.id == "blip.1.v1" & res$method == "ebayesthresh",]
hetero.data.smash.true.2 <-
res[res$.id == "blip.1.v1" & res$method == "smash.true.s8",]
pdat <-
rbind(data.frame(method      = "smash",
method.type = "est",
mise        = hetero.data.smash.2$mise),
data.frame(method      = "smash.homo",
method.type = "homo",
mise        = hetero.data.smash.homo.2$mise),
data.frame(method      = "tithresh.rmad",
method.type = "tithresh",
mise        = hetero.data.tithresh.rmad.2$mise),
data.frame(method      = "tithresh.smash",
method.type = "tithresh",
mise        = hetero.data.tithresh.smash.2$mise),
data.frame(method      = "tithresh.true",
method.type = "tithresh",
mise        = hetero.data.tithresh.true.2$mise),
data.frame(method      = "ebayesthresh",
method.type = "homo",
mise        = hetero.data.ebayes.2$mise),
data.frame(method      = "smash.true",
method.type = "true",
mise        = hetero.data.smash.true.2$mise))
pdat <-
transform(pdat,
method = factor(method,
names(sort(tapply(pdat$mise,pdat$method,mean),
decreasing = TRUE))))
pdat <-
rbind(data.frame(method      = "smash",
method.type = "est",
mise        = hetero.data.smash.2$mise),
data.frame(method      = "smash.homo",
method.type = "homo",
mise        = hetero.data.smash.homo.2$mise),
data.frame(method      = "tithresh.rmad",
method.type = "tithresh",
mise        = hetero.data.tithresh.rmad.2$mise),
data.frame(method      = "tithresh.smash",
method.type = "tithresh",
mise        = hetero.data.tithresh.smash.2$mise),
data.frame(method      = "tithresh.true",
method.type = "tithresh",
mise        = hetero.data.tithresh.true.2$mise),
data.frame(method      = "ebayesthresh",
method.type = "homo",
mise        = hetero.data.ebayes.2$mise),
data.frame(method      = "smash.true",
method.type = "true",
mise        = hetero.data.smash.true.2$mise))
pdat <-
transform(pdat,
method = factor(method,
names(sort(tapply(pdat$mise,pdat$method,mean),
decreasing = TRUE))))
p <- ggplot(pdat,aes(x = method,y = mise,fill = method.type)) +
geom_violin(fill = "skyblue",color = "skyblue") +
geom_boxplot(width = 0.15,outlier.shape = NA) +
scale_fill_manual(values=c("darkorange","dodgerblue","limegreen","gold"),
guide = FALSE) +
coord_flip() +
scale_y_continuous(breaks = seq(1,5)) +
labs(x = "",y = "MISE") +
theme(axis.line = element_blank(),
axis.ticks.y = element_blank())
print(p)
plot(res.mc$x,res.mc$mu.est,type = "l",
ylim = c(min(res.mc$y - 2 * sqrt(res.mc$var.est)),
max(res.mc$y + 2 * sqrt(res.mc$var.est))),
xlab = "time (ms)",ylab = "acceleration (g)",lwd = 2,
col = "darkorange",xlim = c(0,60),xaxp = c(0,60,6))
res.ti.rmad.mc <- tithresh.rmad.wrapper(x.ini.mc,y.ini.mc)
knitr::opts_chunk$set(comment = "#",collapse = TRUE,fig.align = "center")
library(MASS)
library(lattice)
library(smashr)
library(wavethresh)
library(EbayesThresh)
source("../code/motorcycle.functions.R")
data(mcycle)
x.ini.mc <- sort(mcycle$times)
y.ini.mc <- mcycle$accel[order(mcycle$times)]
res.mc <- smash.wrapper(x.ini.mc,y.ini.mc)
plot(res.mc$x,res.mc$mu.est,type = "l",
ylim = c(min(res.mc$y - 2 * sqrt(res.mc$var.est)),
max(res.mc$y + 2 * sqrt(res.mc$var.est))),
xlab = "time (ms)", ylab = "acceleration (g)",lwd = 2,
col = "darkorange",xlim = c(0,60),xaxp = c(0,60,6))
lines(res.mc$x, res.mc$mu.est + 2*sqrt(res.mc$var.est),lty = 5,
lwd = 2,col = "dodgerblue")
lines(res.mc$x,res.mc$mu.est - 2*sqrt(res.mc$var.est),
lty = 5,lwd = 2,col = "dodgerblue")
points(res.mc$x,res.mc$y,pch = 1,cex = 1,col = "black")
res.cons.mc <- smash.cons.wrapper(x.ini.mc,y.ini.mc)
res.ti.cons.mc <- tithresh.cons.wrapper(x.ini.mc,y.ini.mc)
res.ti.mc <- tithresh.wrapper(x.ini.mc,y.ini.mc)
plot(res.mc$x,res.mc$mu.est,type = "l",
ylim = c(min(res.mc$y - 2 * sqrt(res.mc$var.est)),
max(res.mc$y + 2 * sqrt(res.mc$var.est))),
xlab = "time (ms)",ylab = "acceleration (g)",lwd = 2,
col = "darkorange",xlim = c(0,60),xaxp = c(0,60,6))
lines(res.cons.mc$x,res.cons.mc$mu.est,lwd = 2,lty = "dotted",
col = "dodgerblue")
points(res.mc$x,res.mc$y,pch = 1,cex = 0.8,col = "black")
plot(res.mc$x,res.mc$mu.est,type = "l",
ylim = c(min(res.mc$y - 2 * sqrt(res.mc$var.est)),
max(res.mc$y + 2 * sqrt(res.mc$var.est))),
xlab = "time (ms)",ylab = "acceleration (g)",lwd = 2,
col = "darkorange",xlim = c(0,60),xaxp = c(0,60,6))
lines(res.ti.cons.mc$x,res.ti.cons.mc$mu.est,lwd = 2,lty = "solid",
col = "darkblue")
lines(res.ti.mc$x,res.ti.mc$mu.est,lwd = 2,col = "limegreen",lty = "dotted")
points(res.mc$x,res.mc$y,pch = 1,cex = 0.8,col = "black")
res.ti.rmad.mc <- tithresh.rmad.wrapper(x.ini.mc,y.ini.mc)
plot(res.mc$x,res.mc$mu.est,type = "l",
ylim = c(min(res.mc$y - 2 * sqrt(res.mc$var.est)),
max(res.mc$y + 2 * sqrt(res.mc$var.est))),
xlab = "time (ms)",ylab = "acceleration (g)",lwd = 2,
col = "darkorange",xlim = c(0,60),xaxp = c(0,60,6))
lines(res.ti.rmad.mc$x,res.ti.nad.mc$mu.est,lwd = 2,lty = "solid",
col = "darkblue")
res.ti.rmad.mc <- tithresh.rmad.wrapper(x.ini.mc,y.ini.mc)
plot(res.mc$x,res.mc$mu.est,type = "l",
ylim = c(min(res.mc$y - 2 * sqrt(res.mc$var.est)),
max(res.mc$y + 2 * sqrt(res.mc$var.est))),
xlab = "time (ms)",ylab = "acceleration (g)",lwd = 2,
col = "darkorange",xlim = c(0,60),xaxp = c(0,60,6))
lines(res.ti.rmad.mc$x,res.ti.rmad.mc$mu.est,lwd = 2,lty = "solid",
col = "darkblue")
points(res.mc$x,res.mc$y,pch = 1,cex = 0.8,col = "black")
res.ti.rmad.mc <- tithresh.rmad.wrapper(x.ini.mc,y.ini.mc)
plot(res.mc$x,res.mc$mu.est,type = "l",
ylim = c(min(res.mc$y - 2 * sqrt(res.mc$var.est)),
max(res.mc$y + 2 * sqrt(res.mc$var.est))),
xlab = "time (ms)",ylab = "acceleration (g)",lwd = 2,
col = "darkorange",xlim = c(0,60),xaxp = c(0,60,6))
lines(res.ti.rmad.mc$x,res.ti.rmad.mc$mu.est,lwd = 2,lty = "solid",
col = "darkblue")
points(res.mc$x,res.mc$y,pch = 1,cex = 0.8,col = "black")
legend(40, -199, c("TI-thresholding (RMAD)", "SMASH"), col = c("darkblue", "darkorange"), bty = "n", lwd = 1, pt.cex = 1, cex = 0.75)
res.ti.rmad.mc <- tithresh.rmad.wrapper(x.ini.mc,y.ini.mc)
plot(res.mc$x,res.mc$mu.est,type = "l",
ylim = c(min(res.mc$y - 2 * sqrt(res.mc$var.est)),
max(res.mc$y + 2 * sqrt(res.mc$var.est))),
xlab = "time (ms)",ylab = "acceleration (g)",lwd = 2,
col = "darkorange",xlim = c(0,60),xaxp = c(0,60,6))
lines(res.ti.rmad.mc$x,res.ti.rmad.mc$mu.est,lwd = 2,lty = "solid",
col = "darkblue")
points(res.mc$x,res.mc$y,pch = 1,cex = 0.8,col = "black")
legend(40, -100, c("TI-thresholding (RMAD)", "SMASH"), col = c("darkblue", "darkorange"), bty = "n", lwd = 1, pt.cex = 1, cex = 0.75)
library(MASS)
library(lattice)
library(smashr)
library(wavethresh)
library(EbayesThresh)
source("../code/motorcycle.functions.R")
res.ti.rmad.mc <- tithresh.rmad.wrapper(x.ini.mc,y.ini.mc)
plot(res.mc$x,res.mc$mu.est,type = "l",
ylim = c(min(res.mc$y - 2 * sqrt(res.mc$var.est)),
max(res.mc$y + 2 * sqrt(res.mc$var.est))),
xlab = "time (ms)",ylab = "acceleration (g)",lwd = 2,
col = "darkorange",xlim = c(0,60),xaxp = c(0,60,6))
lines(res.ti.rmad.mc$x,res.ti.rmad.mc$mu.est,lwd = 2,lty = "solid",
col = "darkblue")
points(res.mc$x,res.mc$y,pch = 1,cex = 0.8,col = "black")
legend(40, -100, c("TI-thresholding (RMAD)", "SMASH"), col = c("darkblue", "darkorange"), bty = "n", lwd = 1, pt.cex = 1, cex = 0.75)
source("../code/motorcycle.functions.R")
res.ti.rmad.mc <- tithresh.rmad.wrapper(x.ini.mc,y.ini.mc)
source("../code/motorcycle.functions.R")
res.ti.rmad.mc <- tithresh.rmad.wrapper(x.ini.mc,y.ini.mc)
plot(res.mc$x,res.mc$mu.est,type = "l",
ylim = c(min(res.mc$y - 2 * sqrt(res.mc$var.est)),
max(res.mc$y + 2 * sqrt(res.mc$var.est))),
xlab = "time (ms)",ylab = "acceleration (g)",lwd = 2,
col = "darkorange",xlim = c(0,60),xaxp = c(0,60,6))
lines(res.ti.rmad.mc$x,res.ti.rmad.mc$mu.est,lwd = 2,lty = "solid",
col = "darkblue")
points(res.mc$x,res.mc$y,pch = 1,cex = 0.8,col = "black")
legend(40, -100, c("TI-thresholding (RMAD)", "SMASH"), col = c("darkblue", "darkorange"), bty = "n", lwd = 1, pt.cex = 1, cex = 0.75)
source("../code/motorcycle.functions.R")
res.ti.rmad.mc <- tithresh.rmad.wrapper(x.ini.mc,y.ini.mc)
plot(res.mc$x,res.mc$mu.est,type = "l",
ylim = c(min(res.mc$y - 2 * sqrt(res.mc$var.est)),
max(res.mc$y + 2 * sqrt(res.mc$var.est))),
xlab = "time (ms)",ylab = "acceleration (g)",lwd = 2,
col = "darkorange",xlim = c(0,60),xaxp = c(0,60,6))
lines(res.ti.rmad.mc$x,res.ti.rmad.mc$mu.est,lwd = 2,lty = "solid",
col = "darkblue")
points(res.mc$x,res.mc$y,pch = 1,cex = 0.8,col = "black")
legend(40, -100, c("TI-thresholding (RMAD)", "SMASH"), col = c("darkblue", "darkorange"), bty = "n", lwd = 1, pt.cex = 1, cex = 0.75)
source("../code/motorcycle.functions.R")
res.ti.rmad.mc <- tithresh.rmad.wrapper(x.ini.mc,y.ini.mc)
plot(res.mc$x,res.mc$mu.est,type = "l",
ylim = c(min(res.mc$y - 2 * sqrt(res.mc$var.est)),
max(res.mc$y + 2 * sqrt(res.mc$var.est))),
xlab = "time (ms)",ylab = "acceleration (g)",lwd = 2,
col = "darkorange",xlim = c(0,60),xaxp = c(0,60,6))
lines(res.ti.rmad.mc$x,res.ti.rmad.mc$mu.est,lwd = 2,lty = "solid",
col = "darkblue")
points(res.mc$x,res.mc$y,pch = 1,cex = 0.8,col = "black")
legend(40, -100, c("TI-thresholding (RMAD)", "SMASH"), col = c("darkblue", "darkorange"), bty = "n", lwd = 1, pt.cex = 1, cex = 0.75)
res.ti.rmad.mc <- tithresh.rmad.wrapper(x.ini.mc,y.ini.mc)
plot(res.mc$x,res.mc$mu.est,type = "l",
ylim = c(min(res.mc$y - 2 * sqrt(res.mc$var.est)),
max(res.mc$y + 2 * sqrt(res.mc$var.est))),
xlab = "time (ms)",ylab = "acceleration (g)",lwd = 2,
col = "darkorange",xlim = c(0,60),xaxp = c(0,60,6))
lines(res.ti.rmad.mc$x,res.ti.rmad.mc$mu.est,lwd = 2,lty = "solid",
col = "darkblue")
points(res.mc$x,res.mc$y,pch = 1,cex = 0.8,col = "black")
lines(res.mc$x, res.mc$mu.est + 2*sqrt(res.mc$var.est),lty = 5,
lwd = 2,col = "dodgerblue")
lines(res.mc$x,res.mc$mu.est - 2*sqrt(res.mc$var.est),
lty = 5,lwd = 2,col = "dodgerblue")
legend(30, -100, c("TI-thresholding mean estimate", "SMASH mean estimate", "SMASH variance estimate"), col = c("darkblue", "darkorange", "dodgerblue"), bty = "n", lwd = c(1, 1, 5), pt.cex = 1, cex = 0.75)
res.ti.rmad.mc <- tithresh.rmad.wrapper(x.ini.mc,y.ini.mc)
plot(res.mc$x,res.mc$mu.est,type = "l",
ylim = c(min(res.mc$y - 2 * sqrt(res.mc$var.est)),
max(res.mc$y + 2 * sqrt(res.mc$var.est))),
xlab = "time (ms)",ylab = "acceleration (g)",lwd = 2,
col = "darkorange",xlim = c(0,60),xaxp = c(0,60,6))
lines(res.ti.rmad.mc$x,res.ti.rmad.mc$mu.est,lwd = 2,lty = "solid",
col = "darkblue")
points(res.mc$x,res.mc$y,pch = 1,cex = 0.8,col = "black")
lines(res.mc$x, res.mc$mu.est + 2*sqrt(res.mc$var.est),lty = 5,
lwd = 2,col = "dodgerblue")
lines(res.mc$x,res.mc$mu.est - 2*sqrt(res.mc$var.est),
lty = 5,lwd = 2,col = "dodgerblue")
legend(30, -100, c("TI-thresholding mean estimate", "SMASH mean estimate", "SMASH variance estimate"), col = c("darkblue", "darkorange", "dodgerblue"), bty = "n", lwd = 1, lty = c(1, 1, 5), pt.cex = 1, cex = 0.75)
knitr::opts_chunk$set(comment = "#",collapse = TRUE,fig.align = "center")
source("../code/chipseq.functions.R")
library(smashr)
library(ggplot2)
library(cowplot)
load("../data/reg_880000_1011072.RData")
bppos  <- 880001:1011072
counts <- M[1,] + M[,2]
res <- smash.poiss(counts,post.var = TRUE)
macs.file <- "../data/Gm1287peaks_chr1_sorted.txt"
peaks <- read.macs.peaks(macs.file,min(bppos),max(bppos))
create.chipseq.plot(bppos/1e6,counts,res$est,(peaks$start + peaks$end)/2e6,
nbreaks = 80) +
scale_x_continuous(limits = c(0.88,1.02),breaks = seq(0.88,1.02,0.02)) +
scale_y_continuous(limits = c(-1,9),breaks = seq(0,8,2))
create.chipseq.plot(bppos/1e6,counts,res$est,(peaks$start + peaks$end)/2e6,
nbreaks = 80) +
scale_x_continuous(limits = c(0.88,1.02),breaks = seq(0.88,1.02,0.02)) +
scale_y_continuous(limits = c(-1,9),breaks = seq(0,8,2))
install.packages("haarfisz")
source("../code/chipseq.functions.R")
library(smashr)
library(ggplot2)
library(cowplot)
library(haarfisz)
#res <- smash.poiss(counts,post.var = TRUE)
res.hf <- denoise.poisson(counts, meth.1=hf.la10.ti4, cs.1=50, hybrid=F)
# res <- smash.poiss(counts,post.var = TRUE)
res.hf <- denoise.poisson(counts, meth.1=smashr::hf.la10.ti4, cs.1=50, hybrid=F)
hf.la10.ti4=function (x, filter.number = 10, family = "DaubLeAsymm", min.level = 4, noise.level = 1)
{
TT <- length(x)
thresh <- noise.level * sqrt(2 * log(TT))
x.w <- wd(x, filter.number, family, type = "station")
x.w.t <- threshold(x.w, levels = (min.level):(x.w$nlevels - 1), policy = "manual", value = thresh, type = "hard")
x.w.t.r <- AvBasis(convert(x.w.t))
return(x.w.t.r)
}
# res <- smash.poiss(counts,post.var = TRUE)
res.hf <- denoise.poisson(counts, meth.1=hf.la10.ti4, cs.1=50, hybrid=F)
create.chipseq.plot(bppos/1e6,counts,res.hf$est,(peaks$start + peaks$end)/2e6,
nbreaks = 80) +
scale_x_continuous(limits = c(0.88,1.02),breaks = seq(0.88,1.02,0.02)) +
scale_y_continuous(limits = c(-1,9),breaks = seq(0,8,2))
res.hf
create.chipseq.plot(bppos/1e6,counts,res.hf,(peaks$start + peaks$end)/2e6,
nbreaks = 80) +
scale_x_continuous(limits = c(0.88,1.02),breaks = seq(0.88,1.02,0.02)) +
scale_y_continuous(limits = c(-1,9),breaks = seq(0,8,2))
